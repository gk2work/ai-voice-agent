name: Scheduled Tests

on:
  schedule:
    # Run every day at 2 AM UTC
    - cron: "0 2 * * *"
  workflow_dispatch:

jobs:
  backend-tests:
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo:6.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.adminCommand(\"ping\")'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "pip"

      - name: Install dependencies
        working-directory: ./backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run full test suite
        working-directory: ./backend
        env:
          MONGODB_URI: mongodb://localhost:27017/voice_agent_test
          JWT_SECRET_KEY: test-secret-key-for-ci-testing-only
          ENVIRONMENT: test
        run: |
          pytest -v --cov=app --cov-report=html --cov-report=term

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: backend-test-results
          path: backend/htmlcov

  frontend-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v6
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Run full test suite
        working-directory: ./frontend
        run: npm test -- --coverage --watchAll=false

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: frontend-test-results
          path: frontend/coverage

  integration-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Start services with Docker Compose
        run: |
          docker-compose up -d
          sleep 30  # Wait for services to be ready

      - name: Run integration tests
        run: |
          # Test backend health
          curl -f http://localhost:8000/health || exit 1

          # Test frontend
          curl -f http://localhost:3000 || exit 1

          # Test API endpoints
          curl -f http://localhost:8000/api/v1/config/prompts || exit 1

      - name: View logs on failure
        if: failure()
        run: |
          docker-compose logs backend
          docker-compose logs frontend

      - name: Cleanup
        if: always()
        run: docker-compose down -v

  security-scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: "fs"
          scan-ref: "."
          format: "sarif"
          output: "trivy-results.sarif"

      - name: Upload Trivy results
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: "trivy-results.sarif"

  notify:
    needs: [backend-tests, frontend-tests, integration-tests, security-scan]
    runs-on: ubuntu-latest
    if: failure()

    steps:
      - name: Send failure notification
        uses: 8398a7/action-slack@v3
        with:
          status: failure
          text: "Scheduled tests failed! Please check the workflow run."
          webhook_url: ${{ secrets.SLACK_WEBHOOK }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
